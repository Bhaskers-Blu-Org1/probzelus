type 'a t = 'a array array
val get : 'a t -> int -> int -> 'a
val set : 'a t -> int -> int -> 'a -AD-> 'a t
val of_list : 'a list list -> 'a t
val make : int -> int -> 'a -> 'a t
val ini : int -S-> int -S-> (int ~D~> 'a) -S-> unit ~D~> 'a t
val print : ('a -> string) -> 'a t -> unit
val print_map_dist : (float * float) t Distribution.t -AD-> unit
val init_graph: int -> int -AD-> unit
val clear : unit -AD-> unit
val wait_event: unit -> int
val draw_bot: int -> int -> bool -AD-> unit
val draw_position_dist: (int * int) Distribution.t -AD-> unit
val draw_map: bool t -AD-> unit
val draw_map_dist:  (float * float) t Distribution.t -AD-> unit
val random : int -> int -> float -> bool t
val draw_pos_dist: (int * int) Distribution.t -AD-> unit
val max_x : int
val max_y : int
val with_graphics : bool
val input : unit -AD-> int
val output : bool t -> int -> int ->
    bool -> (float * float) t Distribution.t -> (int * int) Distribution.t -AD-> unit

val output_ds : bool t -> int -> int ->
    bool -> float t Distribution.t -> (int * int) Distribution.t -AD-> unit

val error : bool array array * int * int -> float Distribution.t array array -> int Distribution.t -> int Distribution.t -> float
