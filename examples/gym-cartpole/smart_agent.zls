open Cart_pole
open Pendulum

let node cart_pole_gym render action = obs, reward, stop where
  rec init instance_id = cart_init ()
  and init r = 0.
  and automaton
      | Reset -> local dummy
          do obs, reward, stop = cart_reset instance_id, 1., false
          and dummy = print_endline ("Episode reward: "^(string_of_float (last r)))
          and r = 0.
          then Run
      | Run ->
          do obs, reward, stop = cart_step instance_id action render
          and r = reward +. last r
          until stop then Reset


let node cart_pole_zls (obs0, action) = obs where
  rec obs, _, _ = simple_pendulum (obs0, action)

let node controller (obs) = action where
  rec action =
    if Infer.sample (Distribution.bernoulli 0.5) then Right else Left


let node model (score, obs_gym) = score', action where
  rec obs = cart_pole_zls (obs_gym, (Right fby action))
  and action = controller obs
  and score' = Infer.factor (score, -10. *. (abs_float (obs.pole_angle)))

let node smart_main () = () where
  rec reset action = Infer.plan 4 10 model obs
      every true
  and obs, _, stop = cart_pole_gym true (Right fby action)
