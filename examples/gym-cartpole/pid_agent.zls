open Cart_pole
open Pendulum
open Gym


let node controller (angle, (p,i,d)) = action where
  rec e = angle -. (0.0 fby theta)
  and theta = p *. e +. i *. integr(0., e) +. d *. deriv(e)
  and action = if theta > 0. then Right else Left

let node model (prob, obs_init) = p,i,d where
  rec init p = Infer.sample(prob, Distribution.gaussian 0. 1.)
  and init i = Infer.sample(prob, Distribution.gaussian 0. 1.)
  and init d = Infer.sample(prob, Distribution.gaussian 0. 1.)
  and obs = simple_pendulum (obs_init,  Right fby action)
  and action = controller (obs.pole_angle, (p,i,d))
  and () = Infer.factor(prob, -10. *. abs_float (obs.pole_angle))

let node pid_main () = () where
  rec pid_dist = Infer.infer 3000 model obs
  and pid = Distribution.draw pid_dist
  and obs, _, _ = cart_pole_gym true (Right fby action)
  and action = controller (obs.pole_angle, pid)
  and display = draw_obs_front obs
