open Distribution
open Infer_ds_gc
open Utils

(*
let proba mf v = pair (bm, bf) where
  rec init bm = sample (beta (1., 1.))
  and init bf = sample (beta (1., 1.))
  and match gender v with
      | Male   -> do () = observe (bernoulli bm, (status v = Good)) done
      | Female -> do () = observe (bernoulli bf, (status v = Good)) done
      end
      
let node main () = () where
  rec v = readline ()
  (* and () = printline () *)
  and b_dist = infer 1 mf v
  and bm, bf = split b_dist
  
  and () = print_string "Bias Male: "; print_float (mean_float bm); 
           print_string " Bias Female: "; print_float (mean_float bf);
           print_endline ""
*)
      
let proba bias v = b where
  rec init b = sample (beta (1., 1.))
  and () = observe (bernoulli b, (status v = Good))
  
let node main () = () where
  rec v = readline () 
  and init bm = 0.5
  and init bf = 0.5
  and match gender v with
      | Male   -> do bm = mean_float (infer 1 bias v) done
      | Female -> do bf = mean_float (infer 1 bias v) done
      
  and present (abs_float (bm -. bf) > 0.05) -> do () = print_endline "It's a trap!" done
      
  and () = print_string "Bias Male: "; print_float bm; 
           print_string " Bias Female: "; print_float bf;
           print_endline ""
    
