(*
 * Copyright 2018-2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

(**
   This example is insired by http://dippl.org/chapters/05-particlefilter.html.
   It estimates of position of the mouse (grey circles) from some
   noisy observations (red circles).
*)

open Probzelus
open Display
(* open Infer_ds *)
open Infer_ds_gc

(* noisy observation of the mouse position. It is a gaussian centered on the *)
(* exact position *)
let node sensor () = obs where
  rec (x, y) = Display.mouse_pos ()
  and in_bound = 0 < x && x < 400 && 0 < y && y < 400
  and obs = present in_bound -> observe_state_xy (float x, float y)

let node display ((obs_x, obs_y), pos_dist) =
  let rec cpt = (0 -> pre cpt + 1) mod 1000 in
  Display.draw_point_dist_ds pos_dist;
  Display.draw_point Graphics.red [obs_x; obs_y];
  Display.clear ()


let proba hmm (obs_x, obs_y) = pair (p_x, p_y) where
  rec p_x = sample (gaussian (const obs_x fby p_x, speed_x))
  and p_y = sample (gaussian (const obs_y fby p_y, speed_y))
  and () = observe (gaussian (p_x, noise_x), obs_x)
  and () = observe (gaussian (p_y, noise_y), obs_y)


let node main_ds () =
  let obs = sensor () in
  present obs(o) ->
    let pos_dist = infer 10 hmm o in
    display(o, pos_dist)
  else ()
