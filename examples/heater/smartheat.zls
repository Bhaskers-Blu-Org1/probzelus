(*
 * Copyright 2018-2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

(* Une Smart chaudiere ! *)
open Distribution
open Heat
open Infer_pf

let node room_model (temp_init, temp_ext, u) = temp where
  rec temp = (temp_init -> pre temp) +. if u then 0.5 else -. 0.1

let proba controller (reference, temp_room, temp_ext) = u where
  rec u = sample (Distribution.bernoulli 0.5)
  and temp = room_model(temp_room, temp_ext, u)
  and dist = abs_float (reference -. temp)
  and () = factor(if dist -. last dist < 0. then 0. else -20.)
  (* and effect = abs_float (reference -. last temp) -. abs_float (reference -. temp) *)
  (* and score = if  effect > 0. then 0. else -20. *)
  (* and () = factor(score) *)

let node simulator(temp_target, temp_init, temp_ext) = u, temp_room where
  rec reset u = plan 20 4 controller (temp_target, temp_room, temp_ext)
      every true
  and temp_room = heater(h)(c, alpha, beta, temp_ext, temp_init, u)

let node mains_no_graphics () =
  let u, temp = simulator (19.0, 8.0, 5.0) in
  print_string "u = "; print_string (if u then "true" else "false");
  print_string "\ttemp = "; print_float temp;
  print_newline ()

let node mains() =
  let u, temp = simulator (19.0, 8.0, 5.0) in
  let rec time = 0.0 -> pre time +. h in
  let s = Scope.scope2 (-1.0, 40.0, ("u", Scope.points true,
                                     if u then 1.0 else 0.0),
                        ("temp", Scope.points false, temp)) in
  Scope.window ("main_on_19", 10.0, time, s)
