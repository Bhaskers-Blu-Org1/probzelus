(*
 * Copyright 2018-2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

open Probzelus
open Infer_pf
(* open Infer_importance *)

let proba model () = mu where
  rec init mu = sample (Distribution.gaussian (0., sqrt 100.))
  and () = factor(0. fby
                    (Distribution.score
                       (Distribution.gaussian (2. *. mu, 1.),
                        3.5)))

let random_init = Random.self_init ()

let node main () =
  let d = infer 10000 model () in
  print_endline ("mu = "^(string_of_float (Distribution.mean_float d)))

(* ------------------------------------------------------- *)

(* open Symbolic *)

(* let proba model () = mu where *)
(*   rec init mu = Infer_adf.sample ((Symbolic.normal_ef, *)
(*                                    Symbolic.normal_nat_params 0. 100.)) *)
(*   and () = Infer_adf.factor((const 0.) fby *)
(*                               ((Symbolic.gaussian_ll *)
(*                                   (prod [(const 2.); mu]) *)
(*                                   (const 1.) *)
(*                                   (const 3.5)))) *)


(* let node main () = *)
(*   let env, d = Infer_adf.infer model () in *)
(*   print_endline ("mu = "^(get_dist env d)) *)
