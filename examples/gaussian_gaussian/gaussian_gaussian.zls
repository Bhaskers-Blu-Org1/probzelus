(* open Infer *)
(* (\* open Infer_importance *\) *)

(* let node model (prob, ()) = mu where *)
(*   rec init mu = sample (prob, Distribution.gaussian 0. (sqrt 100.)) *)
(*   and () = factor(prob, *)
(*                   0. fby *)
(*                     (Distribution.score *)
(*                        (Distribution.gaussian (2. *. mu) 1.) *)
(*                        3.5)) *)

(* let node main () = *)
(*   let d = infer 10000 model () in *)
(*   print_endline ("mu = "^(string_of_float (Distribution.mean_float d))) *)

(* ------------------------------------------------------- *)

open Symbolic

let node model (prob, ()) = mu where
  rec init mu = Infer_adf.sample (prob,
                                  (Symbolic.normal_ef,
                                   Symbolic.normal_nat_params 0. 100.))
  and () = Infer_adf.factor(prob,
                            (const 0.) fby
                              ((Symbolic.gaussian_ll
                                  (prod [(const 2.); mu])
                                  (const 1.)
                                  (const 3.5))))


let node main () =
  let env, d = Infer_adf.infer model () in
  print_endline ("mu = "^(get_dist env d))
