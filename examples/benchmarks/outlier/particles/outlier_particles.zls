open Distribution
open Infer

let node outlier (prob, yobs) =
    let init x0 = Distribution.draw (gaussian 0. 100.) in
    let init clutter_prob = Distribution.draw (beta 100. 1000.) in

    let rec x = x0 -> Distribution.draw (gaussian (pre x) 1.) in
    let clutter = Distribution.draw (gaussian 0. 100.) in
    let is_clutter = Distribution.draw (bernoulli clutter_prob) in

    let () = (if is_clutter then
        factor (prob, Distribution.score (gaussian 0. 100.) yobs)
    else
        factor (prob, Distribution.score (gaussian x 1.) yobs)) in
    (is_clutter, x)

let node main (tr, observed) =
    let rec t = 1. fby (t +. 1.) in
  
    let x_d = infer_dyn_resample (Aux.particles ()) outlier observed in
    let res = Aux.get_mean x_d in
  
    let error = (res  -. tr) ** 2. in
    let rec total_error = error -> (pre total_error) +. error in
    let mse = total_error /. t in
  
    let memory = Aux.get_memory () in
    (*let rec time = (Aux.get_time ()) -> (Aux.get_time ()) -. (pre time) in*)
  
    (Aux.particles_tostring x_d), mse


