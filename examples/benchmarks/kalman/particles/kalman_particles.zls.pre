open Infer

let node delay_kalman (prob, yobs) =
  let rec automaton
      | Init ->
          do xt = sample (prob, Distribution.gaussian 0. 100.)
          then Run
      | Run ->
          do xt = sample (prob, Distribution.gaussian (last xt) 1.)
          done
      end
  and () = factor (prob, Distribution.score (Distribution.gaussian xt 1.) yobs)
  and t = 1 fby (t + 1)
  (* and init xt = assume_constant "x0" (mgaussian 0. 1.) *)
  in
  xt


let node main () =
  let (tr, observed) = Aux.read_val () in
  let rec t = 1. fby (t +. 1.) in
  let () = Aux.collect_garbage () in

  let x_d = infer parts delay_kalman observed in

  let est_mean, _ = Distribution.stats_float x_d in
  let error = (est_mean -. tr) ** 2. in
  let rec total_error = error -> (pre total_error) +. error in
  let mse = total_error /. t in

  let memory = Aux.get_memory () in
  let rec time = (Aux.get_time ()) -> (Aux.get_time ()) -. (pre time) in

  print_string ((string_of_float mse) ^ ", " ^ (string_of_float memory) ^ ", " ^ (string_of_float time) ^ "\n")

