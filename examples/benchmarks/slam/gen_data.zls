let sensor_noise = Array_misc.sensor_noise
let wheel_noise = Array_misc.wheel_noise
let max_pos = Array_misc.max_pos

let random_init = Random.self_init ()

let real_map =
  Array_misc.random (max_pos + 1) 0.6

let node slam_ctrl () = cmd where
  rec init x = 0
  and automaton
      | Incr ->
          do cmd = 1
          and x = last x + cmd
          until (x >= max_pos) then Decr
      | Decr ->
          do cmd = -1
          and x = last x + cmd
          until (x <= 0) then Incr
      end


let node slam_obs real_map cmd = (obs, x) where
  rec init x = 0
  and x =
    max 0 (min max_pos (if wheel_slip then last x else last x + cmd))
  and wheel_slip = Distribution.draw (Distribution.bernoulli wheel_noise)
  and sensor_error = Distribution.draw (Distribution.bernoulli sensor_noise)
  and b = Array_misc.get real_map x
  and obs = if sensor_error then not b else b


let node main () = () where
  rec cmd = slam_ctrl ()
  and (obs, x) = slam_obs real_map cmd
  and () =
    Array_misc.print_map real_map;
    print_int x; print_string ", ";
    Array_misc.print_bool obs; print_string ", ";
    print_int cmd;
    print_newline ()
