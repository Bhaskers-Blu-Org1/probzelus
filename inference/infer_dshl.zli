type 'a random

(* Draw a random variable from a distribution *)
val assume : (Infer_ds.pstate * (('a, 'b) Distribution_ds.dist) * 'a random) -AD-> 'b random

(* Observe a random variable to be some value *)
val observe : (Infer_ds.pstate * 'a random * 'a) -AD-> unit 

(* Force a sample of the random varible and obtain its value *)
val value : (Infer_ds.pstate * 'a random) -AD-> 'a

(* Draw a random value, but do not incorporate the value as a sample in the graph *)
val draw : 'a random -AD-> 'a

(* Construct a delta-distributed random variable from a value *)
val delta : (Infer_ds.pstate * 'a) -AD-> 'a random

val print_var : 'a random -AD-> unit
